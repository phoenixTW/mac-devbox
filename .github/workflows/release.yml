name: Release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  changelog:
    runs-on: ubuntu-latest
    # Only run on push to main or when PR is merged to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)

    outputs:
      version: ${{ steps.version.outputs.new_version }}
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate new version
        id: version
        uses: phoenixTW/bump-version@1.0.2
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}

      - name: Generate Changelog
        uses: saadmk11/changelog-ci@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_version: ${{ steps.version.outputs.new_version }}
          changelog_filename: CHANGELOG.md
          config_file: .changelog-ci.json

  release:
    runs-on: ubuntu-latest
    needs: changelog
    # Only run on push to main or when PR is merged to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    permissions:
      contents: write
      pull-requests: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from changelog job
        id: version
        run: |
          echo "version=${{ needs.changelog.outputs.version }}" >> $GITHUB_OUTPUT

      - name: Update version in common.sh
        run: |
          sed -i "s/get_version() { echo \".*\"/get_version() { echo \"${{ steps.version.outputs.version }}\"/" lib/common.sh

      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add lib/common.sh
          git commit -m "chore: bump version to ${{ steps.version.outputs.version }}" || exit 0
          git push origin main

      - name: Create release archive
        run: |
          tar -czf devbox-${{ steps.version.outputs.version }}.tar.gz \
            bin/ lib/ completions/ config.defaults/ install.sh README.md

      - name: Extract changelog for release notes
        id: changelog
        run: |
          # Extract the latest version section from CHANGELOG.md
          awk '/^## \[.*\]/{if(found) exit; found=1} found' CHANGELOG.md > release_notes.md
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: phoenixTW/github-release@1.1
        with:
          access_token: ${{ secrets.GITHUB_TOKEN }}
          tag: "${{ steps.version.outputs.version }}"
          notes: |
            ${{ steps.changelog.outputs.changelog }}

            ## Installation

            ```bash
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/phoenixTW/mac-devbox/refs/tags/${{ steps.version.outputs.version }}/install.sh)"
            ```
          draft: false
          prerelease: false
